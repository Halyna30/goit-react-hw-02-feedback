{"version":3,"sources":["Component/Section/SectionStyles.js","Component/Section/Section.jsx","Component/FeedbackOptions/FeedbackOptionsStyles.js","Component/FeedbackOptions/FeedbackOptions.jsx","Component/Statistics/StatisticsStyles.js","Component/Statistics/Statistics.jsx","Component/Notification/Notification.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","section","margin","top","right","bottom","left","title","fontSize","Section","children","classes","className","defaultProps","btn","marginLeft","background","border","borderRadius","outline","transform","color","FeedbackOptions","options","onLeaveFeedback","type","onClick","item","width","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","event","target","innerHTML","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","totalFeedback","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6db4f385.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  section: {\r\n    margin: {\r\n      top: 5, // jss-plugin-default-unit makes this 5px\r\n      right: 0,\r\n      bottom: 0,\r\n      left: '1rem',\r\n    },\r\n  },\r\n  title: {\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useStyles from './SectionStyles';\r\n\r\nconst Section = ({ title, children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <section className={classes.section}>\r\n      <h2 className={classes.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n  children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  btn: {\r\n    marginLeft: 10,\r\n    background: 'pink',\r\n    border: 'none',\r\n    borderRadius: 5,\r\n    outline: 'none',\r\n    '&:hover': {\r\n      transform: 'scale(1.1)',\r\n      color: 'white',\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useStyles from './FeedbackOptionsStyles';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={onLeaveFeedback} className={classes.btn}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={onLeaveFeedback} className={classes.btn}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={onLeaveFeedback} className={classes.btn}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  item: {\r\n    width: 200,\r\n    color: 'grey',\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useStyles from './StatisticsStyles';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <p className={classes.item}>Good : {good}</p>\r\n      <p className={classes.item}>Neutral : {neutral}</p>\r\n      <p className={classes.item}>Bad : {bad}</p>\r\n      <p className={classes.item}>Total : {total}</p>\r\n      <p className={classes.item}>Positive feedback : {positivePercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  item: {\r\n    width: 200,\r\n    color: 'red',\r\n  },\r\n});\r\nconst Notification = ({ message }) => {\r\n  const classes = useStyles();\r\n  return <p className={classes.item}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\n\r\nimport Section from './Component/Section/Section';\r\nimport FeedbackOptions from './Component/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './Component/Statistics/Statistics';\r\nimport Notification from './Component/Notification/Notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = event => {\r\n    if (event.target.innerHTML === 'Good') {\r\n      this.setState(({ good }) => ({\r\n        good: good + 1,\r\n      }));\r\n    } else if (event.target.innerHTML === 'Neutral') {\r\n      this.setState(prevState => ({\r\n        neutral: prevState.neutral + 1,\r\n      }));\r\n    } else if (event.target.innerHTML === 'Bad') {\r\n      this.setState(prevState => ({\r\n        bad: prevState.bad + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  countTotalFeedback = () =>\r\n    this.state.good + this.state.neutral + this.state.bad;\r\n  countPositiveFeedbackPercentage = () =>\r\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n\r\n  render() {\r\n    const totalFeedback = this.countTotalFeedback();\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {totalFeedback === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={totalFeedback}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}